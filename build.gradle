plugins {
	id 'org.springframework.boot' version '2.4.0'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
	id 'jacoco'
	id 'info.solidsoft.pitest' version '1.5.1'
}

group = 'com.jam'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '15'

apply plugin: 'info.solidsoft.pitest'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'junit:junit:4.12'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
	dependsOn test // tests are required to run before generating the report

	afterEvaluate { // (optional) : to exclude classes / packages from coverage
		classDirectories.from = files(classDirectories.files.collect {
			fileTree(
					dir: it,
					exclude: [ 'com/jam/fizzbuzz/FizzBuzzApplication.class' ])
		})
	}
}


jacoco {
	toolVersion = "0.8.6"
	reportsDir = file("$buildDir/reports/jacoco")
}


jacocoTestCoverageVerification {
	dependsOn test


	violationRules {
		rule {
			limit {
				counter = 'LINE'
				value = 'MISSEDCOUNT'
				maximum = 2
			}
		}
	}
}

pitest {
	junit5PluginVersion = '0.12'
	timestampedReports = false
	targetClasses = ['com.jam.fizzbuzz.*']
	threads = 12

}

build.dependsOn test
build.dependsOn jacocoTestReport
build.dependsOn jacocoTestCoverageVerification